import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

# –ü–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏
FILES_DIR = 'files'

# –ù–∞–∑–≤–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
FILE_BUTTONS = {
    "üìÑ –î–æ–∫—É–º–µ–Ω—Ç 1": "file1.pdf",
    "üìù –î–æ–∫—É–º–µ–Ω—Ç 2": "file2.docx",
    "üìä –¢–∞–±–ª–∏—Ü–∞": "file3.xlsx"
}

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton(text=btn_text, callback_data=filename)]
        for btn_text, filename in FILE_BUTTONS.items()
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ñ–∞–π–ª:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    file_name = query.data
    file_path = os.path.join(FILES_DIR, file_name)

    if os.path.exists(file_path):
        await query.message.reply_document(document=open(file_path, 'rb'))
    else:
        await query.message.reply_text("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    TOKEN = "TOKEN_BOT"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
